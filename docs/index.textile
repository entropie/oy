!>https://github.com/downloads/entropie/oy/oybanner.png(Oy!)!

h1. Oy! README

h1. About

Oy! is a *Wiki* based on *git*. Purely written in *Ruby* with few dependencies. All you need to use it is clone Oy!, create a new git repos and start the application.

This is inspired by *gollum*, the *github* wiki. *Ramaze* is the framework.

h2. Architecture

Pathnames for wikipages are as well available in the git repos. So the page you get while requesting <code>/test/index</code> is equivalent with <code>/path/to/your/repos/test/index.textile</code>. Media files, for now only images, are stored in <code>media/</code> with full history.

Oy! has a simple WWW Api. You're able to POST/GET pages from the Wiki in plaintext. It's also possible to pull/push pages from another Oy! Wiki.

h2. The Ideas

* Path structure of the Web-app should be physically exist on disk. That makes it easier to find a page to edit or something.
* _EVERY_ File should be stored in the repos. For now, the <code>/view</code> Directory from the Oy! repos is used to parse templates and define how the HTML is being outputted -- that will change. The <code>/view</code>, <code>/layout</code> directories will be life in your repos, so you can modify the way everything looks quite easily.
* Pages/Dirs/The entire repos will be lockable. <code>/test/foo</code> will be locked for web (write) access if there exist a file <code>/test/foo.locked</code>. This will be possible for directories too. Yet, there is no plan to implement a way to (un)lock files via web frontend.
* ATM there is the only markup language RedCloth. There are plans to implement more. The basic idea is to output like everything you store in your repos somehow. Haml and HTML/XML are the next goals.

h3. Syntax

As mentioned there is only one markup system ATM: RedCloth. Besides this, there are some other ways to modify output. For now we create just Wiki-Links, and change the page header (h1) to the very first h1 in the data defintion of the content file. Another idea is to implement own output formats in your own repos.
